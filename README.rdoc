= A Ruby library for working with the Basecamp web-services API.

For more information about the Basecamp web-services API, visit:

  http://developer.37signals.com/basecamp

You can find the original code in:

  http://developer.37signals.com/basecamp/basecamp.rb

NOTE: not all of Basecamp's web-services are accessible via REST. This
library provides access to RESTful services via ActiveResource. Services not
yet upgraded to REST are accessed via the Basecamp class. Continue reading
for more details.

== Installation

Install the gem

  gem install basecamp

Include the system gems and require the library in your script

  require 'rubygems'
  require 'basecamp'

=== Dependencies

  * activeresource >= 2.3.0
  * xml-simple
  * oauth2

== Establishing a Connection

The first thing you need to do is establish a connection to Basecamp. This
requires your Basecamp site address and your login credentials or API token.

=== Using username and password

  Basecamp.establish_connection!('yoururl.basecamphq.com', 'username', 'password')

=== Using API token (My Info -> Show your tokens)

  Basecamp.establish_connection!('yoururl.basecamphq.com', 'APITOKEN', 'X')

=== With a Basecamp account that use SSL (https://yoururl.basecamphq.com)

  Basecamp.establish_connection!('yoururl.basecamphq.com', 'APITOKEN', 'X', true)

This is the same whether you're accessing using the ActiveResource interface,
or the legacy interface.

== Using the REST interface via ActiveResource

The REST interface is accessed via ActiveResource, a popular Ruby library
that implements object-relational mapping for REST web-services. For more
information on working with ActiveResource, see:

 * http://api.rubyonrails.org/files/activeresource/README.html
 * http://api.rubyonrails.org/classes/ActiveResource/Base.html

=== Finding a Resource

Find a specific resource using the +find+ method. Attributes of the resource
are available as instance methods on the resulting object. For example, to
find a message with the ID of 8675309 and access its title attribute, you
would do the following:

  m = Basecamp::Message.find(8675309)
  m.title # => 'Jenny'

To find all messages for a given project, use find(:all), passing the
project_id as a parameter to find. Example:

  messages = Basecamp::Message.find(:all, params => { :project_id => 1037 })
  messages.size # => 25

To get the current logged in user:

  Basecamp::Person.me

Note: You can access the API token using this object. This is useful if you only have username/password and you want to use the API token in future calls:

  Basecamp::Person.me.token

To get all people by company:

  Basecamp::Person.find(:all, :params => {:company_id => company.id})

To get all people by project:

  Basecamp::Person.find(:all, :params => {:project_id => project.id})

=== Creating a Resource

Create a resource by making a new instance of that resource, setting its
attributes, and saving it. If the resource requires a prefix to identify
it (as is the case with resources that belong to a sub-resource, such as a
project), it should be specified when instantiating the object. Examples:

  m = Basecamp::Message.new(:project_id => 1037)
  m.category_id = 7301
  m.title = 'Message in a bottle'
  m.body = 'Another lonely day, with no one here but me'
  m.save # => true

  c = Basecamp::Comment.new(:post_id => 25874)
  c.body = 'Did you get those TPS reports?'
  c.save # => true

You can also create a resource using the +create+ method, which will create
and save it in one step. Example:

  Basecamp::TodoItem.create(:todo_list_id => 3422, :contents => 'Do it')


=== Updating a Resource

To update a resource, first find it by its id, change its attributes, and
save it. Example:

  m = Basecamp::Message.find(8675309)
  m.body = 'Changed'
  m.save # => true


=== Deleting a Resource

To delete a resource, use the +delete+ method with the ID of the resource
you want to delete. Example:

  Basecamp::Message.delete(1037)


=== Attaching Files to a Resource

If the resource accepts file attachments, the +attachments+ parameter should
be an array of Basecamp::Attachment objects. Example:

  f1 = File.open('primary.doc')
  s1 = StringIO.new('a string')

  a1 = Basecamp::Attachment.create('primary', f1)
  a2 = Basecamp::Attachment.create('another', s1))

  m = Basecamp::Message.new(:project_id => 1037)
  ...
  m.attachments = [a1, a2]
  m.save # => true

  f1.close

=== Milestones

Is not implemented as an active resource, it uses the non-REST interface.
Browse the source (lib/basecamp/resources/milestone) to see all available methods.

For example, to list all milestones in a project:

  milestones = Basecamp::Milestone.list(1037)
  milestones.first.title # => "The Milestone"

=== More about Todo Items

To access all todo items in a todo list:

  Basecamp::TodoItem.find(:all, :params => { :todo_list_id => 3422 })

You can't access all todo items in a project with a single API call.
So you have to do something like this:

  def todo_items_on_project(project_id)
    todo_items = []
    todo_lists = TodoList.find(:all, :params => { :project_id => project_id })
    todo_lists.each do |todo_list|
      todo_items += TodoItem.find(:all, :params => { :todo_list_id => todo_list.id })
    end
    todo_items
  end

= Using the non-REST interface

You can access other resources not included in this wrapper yet using "record" and "records".

  person = Basecamp.record("/contacts/person/93832")
  person.first_name # => "Jason"

  people_in_company = Basecamp.records("person", "/contacts/people/85")
  people_in_company.first.first_name # => "Jason"

== Contributors

* jamesarosen
* defeated
* justinbarry
* fmiopensource
